<pluginUI:CustomWindow x:Class="Twenty57.Linx.Components.Database.ExecuteSQL.Editors.SQLEditor.SQLEditor"
											 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
											 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
											 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
											 xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
											 xmlns:mvvmTextEditor="clr-namespace:Twenty57.Linx.Components.Database.UI.Controls"
											 xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
											 xmlns:model="clr-namespace:Twenty57.Linx.Components.Database.ExecuteSQL.Editors.SQLEditor.ViewModel"
											 xmlns:pluginUI="clr-namespace:Twenty57.Linx.Plugin.UI.Windows;assembly=Twenty57.Linx.Plugin.UI"
											 xmlns:pluginUIHelpers="clr-namespace:Twenty57.Linx.Plugin.UI.Helpers;assembly=Twenty57.Linx.Plugin.UI"
											 xmlns:avalonedit="clr-namespace:ICSharpCode.AvalonEdit.Editing;assembly=ICSharpCode.AvalonEdit"
											 xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
											 xmlns:local="clr-namespace:Twenty57.Linx.Components.Database.ExecuteSQL.Editors.SQLEditor.ViewModel"
											 xmlns:uiconverters="clr-namespace:Twenty57.Linx.Components.Database.UI.Converters"
											 xmlns:helpers="clr-namespace:Twenty57.Linx.Components.Database.ExecuteSQL.Editors.SQLEditor.Helpers"
											 xmlns:pluginUIEditors="clr-namespace:Twenty57.Linx.Plugin.UI.Editors.Static;assembly=Twenty57.Linx.Plugin.UI"
											 xmlns:gif="http://wpfanimatedgif.codeplex.com"

											 mc:Ignorable="d" 
											 d:DesignHeight="300" d:DesignWidth="300"
											 ShowInTaskbar="False"
											 Title="SQL"
											 WindowStartupLocation="CenterOwner"
											 Width="800" MinWidth="800"
											 Height="500" MinHeight="450"
											 pluginUIHelpers:DialogCloser.DialogResult="{Binding DialogResult}" 
											 FocusManager.FocusedElement="{Binding ElementName=sqlEditor}"
											 Style="{StaticResource DialogWindowStyle}">

	<pluginUI:CustomWindow.Resources>
		<Style TargetType="Button" x:Key="expressionButtonStyle" BasedOn="{StaticResource DialogButtonStyle}">
			<Setter Property="Width" Value="120" />
			<Setter Property="Height" Value="20" />
			<Setter Property="Content" Value="INSERT E_XPRESSION"/>
			<Style.Triggers>
				<DataTrigger Binding="{Binding SQLIndexInExpression}" Value ="True">
					<Setter Property="Content" Value="EDIT E_XPRESSION"></Setter>
				</DataTrigger>
			</Style.Triggers>
		</Style>
		<BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"/>
		<uiconverters:GridLengthConverter x:Key="gridLengthConverter"/>
		<helpers:GridSplitterVisibilityConverter x:Key="gridSplitterVisibilityConverter"/>
		<helpers:TestSqlPaneScrollViewerHeightConverter x:Key="testSqlPaneScrollViewerHeightConverter"/>
		<helpers:MouseWheelBehavior x:Key="ignoreMouseWheelBehavior"/>
	</pluginUI:CustomWindow.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="*"/>
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>

		<Grid Grid.Row="0" Name="mainGrid">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="2*" MinWidth="280"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="30"/>
				<RowDefinition Height="*" MinHeight="80"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>

			<DockPanel Grid.Column="2"
								 Grid.Row="0"
								 LastChildFill="False" VerticalAlignment="Stretch" Margin="0 0 0 5">

				<Button DockPanel.Dock="Right" 
								Style="{StaticResource expressionButtonStyle}"
								Command="{Binding ExpressionCommand}"
								Visibility="{Binding SQLTabSelected, Converter={StaticResource VisibilityConverter}}"/>
			</DockPanel>
			<Border BorderThickness="1" 
								BorderBrush="DarkGray"
								Grid.Row="1">
				<TabControl x:Name="editorTestTabControl" SelectedIndex="{Binding EditorTestTabSelectedIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
					<TabItem Header="SQL" Width="60" Height="25">
						<Grid x:Name="sqlGrid">
							<Grid.ColumnDefinitions>
								<ColumnDefinition MinWidth="100" Width="300*" />
								<ColumnDefinition Width="3*"/>
								<ColumnDefinition MinWidth="100"  Width="100*"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="*"/>
							</Grid.RowDefinitions>
							<mvvmTextEditor:MvvmTextEditor x:Name="sqlEditor" Grid.Column="0" Foreground="{StaticResource TitlebarActive}" VerticalAlignment="Stretch"
									FontFamily="Consolas"
									ScrollViewer.HorizontalScrollBarVisibility="Auto"
									ScrollViewer.VerticalScrollBarVisibility="Auto"
									BoundCaretOffset="{Binding SQLIndex, Mode=TwoWay}"
									BoundText="{Binding SQL, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
									dd:DragDrop.IsDropTarget="True" dd:DragDrop.DropHandler="{Binding}" >
								<mvvmTextEditor:MvvmTextEditor.Resources>
									<Style TargetType="avalonedit:TextArea">
										<Setter Property="Foreground" Value="Black" />
									</Style>
								</mvvmTextEditor:MvvmTextEditor.Resources>
							</mvvmTextEditor:MvvmTextEditor>
							<GridSplitter Grid.Column="1"
										HorizontalAlignment="Center"
										VerticalAlignment="Stretch"
										ShowsPreview="True"
										Width="3" /><Border BorderThickness="0"  Grid.Column="3" Background="{StaticResource DialogWindowBackgroundBrush}">
								<TabControl BorderBrush="{StaticResource DialogWindowBackgroundBrush}"  TabStripPlacement ="Top" BorderThickness="10" SelectedIndex="{Binding SQLSelectedTabIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
									<TabItem Header="Variables">
										<Border BorderThickness="0" BorderBrush="{StaticResource DialogWindowBackgroundBrush}">
											<pluginUIEditors:VariablesEditor Designer="{Binding Designer, Mode=OneWay}" DataContext="{Binding}"/>
										</Border>
									</TabItem>
									<TabItem Header="Database" Background="{StaticResource DialogWindowBackgroundBrush}">
										<Grid>
											<StackPanel>
												<Image gif:ImageBehavior.AnimatedSource="{StaticResource AppIcon_Loading}" Height="20" Width="20" Visibility="{Binding LoadingDatabaseObjects, Converter={StaticResource VisibilityConverter}}" Margin="5" Grid.Column="0"/>
											</StackPanel>
											<TreeView BorderBrush="Teal" BorderThickness="5" ItemsSource="{Binding DatabaseObjects}" Visibility="{Binding DatabaseObjectsLoaded, Converter={StaticResource VisibilityConverter}}" dd:DragDrop.IsDragSource="True" dd:DragDrop.DragHandler="{Binding}">
											<TreeView.Resources>
												<HierarchicalDataTemplate DataType="{x:Type model:ComplexNodeViewModel}" ItemsSource="{Binding Children}">
													<StackPanel Orientation="Horizontal" Margin="0,1,2,1">
														<TextBlock  Text="{Binding Text}">
															<TextBlock.ContextMenu >
																<ContextMenu Visibility="{Binding ContextMenuVisible, Mode=TwoWay, Converter={StaticResource VisibilityConverter}}" >
																	<MenuItem Header="Generate Select" Command="{Binding GenerateSelectCommand, Mode=OneWay}">
																	</MenuItem>
																	<MenuItem Header="Generate Insert" Command="{Binding GenerateInsertCommand, Mode=OneWay}">
																	</MenuItem>
																	<MenuItem Header="Generate Update" Command="{Binding GenerateUpdateCommand, Mode=OneWay}">
																	</MenuItem>
																</ContextMenu>
															</TextBlock.ContextMenu>
														</TextBlock>
													</StackPanel>
												</HierarchicalDataTemplate>
												<DataTemplate DataType="{x:Type model:SimpleNodeViewModel}">
													<StackPanel Orientation="Horizontal" Margin="0,1,2,1">
														<TextBlock Text="{Binding Text}" />
													</StackPanel>
												</DataTemplate>
										</TreeView.Resources>
											<TreeView.ItemContainerStyle>
												<Style TargetType="{x:Type TreeViewItem}">
													<Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
													<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
												</Style>
											</TreeView.ItemContainerStyle>
										</TreeView>
										</Grid>
									</TabItem>
								</TabControl>
							</Border>
						</Grid>
					</TabItem>
					<TabItem Header="Test" Width="60" Height="25">
						<helpers:TestSqlPaneScrollViewer x:Name="testSqlPane" Grid.Column="4" Foreground="{StaticResource TitlebarActive}" VerticalScrollBarVisibility="Auto" >
							<Grid x:Name="testGrid" >
								<Grid.RowDefinitions>
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="20*" MinWidth="100" />
									<ColumnDefinition Width="137*"/>
									<ColumnDefinition Width="3" />
									<ColumnDefinition Width="626*" MinWidth="100" />
								</Grid.ColumnDefinitions>

								<Border Grid.Column="0" BorderThickness="1" 
									BorderBrush="{StaticResource TitlebarActive}" 
									IsEnabled="{Binding CanExecuteSQL, Mode=OneWay}"
									Background="{StaticResource ForegroundLightBrush}" Grid.ColumnSpan="2">
									<ScrollViewer x:Name="parameterScrollViewer" VerticalScrollBarVisibility="Auto" MaxHeight="{Binding ElementName=testSqlPane, Path=ActualHeight, Converter={StaticResource testSqlPaneScrollViewerHeightConverter}}" >
										<StackPanel Orientation="Vertical" CanVerticallyScroll="False">
											<TextBlock Margin="5" Foreground="{StaticResource ForegroundDarkBrush}">Test SQL</TextBlock>
											<ListView x:Name="SQLParametersList" Margin="5" ItemsSource="{Binding SQLParameters}">
												<i:Interaction.Behaviors>
													<helpers:MouseWheelBehavior />
												</i:Interaction.Behaviors>
												<ListView.Resources>
													<DataTemplate DataType="{x:Type local:SQLParameterModel}">
														<Grid>
															<Grid.ColumnDefinitions>
																<ColumnDefinition MinWidth="100" Width="*" />
															</Grid.ColumnDefinitions>
															<Grid.RowDefinitions>
																<RowDefinition Height="*" />
																<RowDefinition Height="*" />
															</Grid.RowDefinitions>
															<TextBlock Grid.Row="0" 
															Loaded="SQLParameterNameLabel_Loaded" 
															 HorizontalAlignment="Left" 
															 TextTrimming="CharacterEllipsis" Text="{Binding Name, Mode=OneTime}" 
															 ToolTip="{Binding Name, Mode=OneTime}" 
															 MaxWidth="{Binding ElementName=parameterScrollViewer, Path=ActualWidth, Converter={StaticResource testSqlPaneScrollViewerHeightConverter}}"/>
															<TextBox Grid.Row="1" Text="{Binding Value}" />
														</Grid>
													</DataTemplate>
												</ListView.Resources>
											</ListView>
											<DockPanel Grid.Column="0" LastChildFill="False" Background="{StaticResource ForegroundLightBrush}">
												<Button DockPanel.Dock="Left" Margin="5" Content="_EXECUTE SQL" Height="20" Command="{Binding ExecuteSQLCommand, Mode=OneWay}" />
											</DockPanel>
										</StackPanel>
									</ScrollViewer>
								</Border>
								<GridSplitter Grid.Column="2"
										Grid.Row="0"
										HorizontalAlignment="Center"
										VerticalAlignment="Stretch"
										ShowsPreview="True"
										Width="3" />
								<StackPanel x:Name="resultsStackPanel" Grid.Column="3"
								Visibility="{Binding HasQueryResults, Converter={StaticResource booleanToVisibilityConverter}, Mode=OneWay}">
									<StackPanel Margin="5" Orientation="Horizontal">
										<TextBlock FontWeight="Bold" FontSize="12">Results</TextBlock>
										<TextBlock Margin="5 0 0 0" VerticalAlignment="Bottom" 
									   Visibility="{Binding MoreResults, Converter={StaticResource booleanToVisibilityConverter}, Mode=OneWay}" 
									   Text="{Binding ResultsCount, StringFormat='(first {0})'}"/>
									</StackPanel>
									<DataGrid MaxHeight="{Binding ElementName=testSqlPane, Path=ActualHeight, Converter={StaticResource testSqlPaneScrollViewerHeightConverter}}"
											AutoGenerateColumns="True"
											AutoGeneratingColumn="resultsDataGrid_AutoGeneratingColumn"
											IsReadOnly="True"
											ItemsSource="{Binding QueryResults, Mode=OneWay}" 
											CanUserSortColumns="False">
										<i:Interaction.Behaviors>
											<helpers:MouseWheelBehavior />
										</i:Interaction.Behaviors>
									</DataGrid>
								</StackPanel>
								<TextBox Grid.Column="3" 
									 TextWrapping="Wrap"
									 IsReadOnly="True"
									 ScrollViewer.VerticalScrollBarVisibility="Auto"
									 Text="{Binding QueryError, Mode=OneWay}"
									 Visibility="{Binding HasQueryError, Converter={StaticResource booleanToVisibilityConverter}, Mode=OneWay}"/>
							</Grid>
						</helpers:TestSqlPaneScrollViewer>
					</TabItem>
				</TabControl>
			</Border>
		</Grid>
		<DockPanel Grid.Row="1" HorizontalAlignment="Stretch" LastChildFill="False" Background="{StaticResource DialogWindowBackgroundBrush}" Margin="0 15 0 0"
							 KeyboardNavigation.TabNavigation="Local">
			<Button Content="_CANCEL" IsCancel="True" DockPanel.Dock="Right" TabIndex="2"/>
			<Button Style="{StaticResource DialogPrimaryButtonStyle}" Content="_OK" Command="{Binding OKCommand, Mode=OneWay}" Margin="0 0 10 0" DockPanel.Dock="Right" TabIndex="1"/>
		</DockPanel>
	</Grid>
</pluginUI:CustomWindow>
