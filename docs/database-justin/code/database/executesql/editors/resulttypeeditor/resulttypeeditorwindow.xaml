<pluginUI:CustomWindow x:Class="Twenty57.Linx.Components.Database.ExecuteSQL.Editors.ResultTypeEditor.ResultTypeEditorWindow"
											 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
											 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
											 xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
											 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
											 xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
											 xmlns:local="clr-namespace:Twenty57.Linx.Components.Database.ExecuteSQL.Editors.ResultTypeEditor"
											 xmlns:viewModel="clr-namespace:Twenty57.Linx.Components.Database.ExecuteSQL.Editors.ResultTypeEditor.ViewModel"
											 xmlns:converters="clr-namespace:Twenty57.Linx.Components.Database.UI.Converters"
											 xmlns:pluginUI="clr-namespace:Twenty57.Linx.Plugin.UI.Windows;assembly=Twenty57.Linx.Plugin.UI"
											 xmlns:pluginUIEditors="clr-namespace:Twenty57.Linx.Plugin.UI.Editors;assembly=Twenty57.Linx.Plugin.UI"
											 mc:Ignorable="d" 
											 WindowState="Normal" 
											 Name="ResultTypeBuildWindow"
											 Width="650" MinWidth="600"
											 Height="420" MinHeight="350"
											 ShowInTaskbar="False"
											 WindowStartupLocation="CenterOwner"
											 Title="Output Editor" 
											 Style="{StaticResource DialogWindowStyle}">
	<pluginUI:CustomWindow.Resources>
		<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
		<converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
		<converters:BoolToValueConverter x:Key="IsDraggedToColorConverter" FalseValue="{StaticResource TitlebarInactive}" TrueValue="{StaticResource TitlebarActive}" />
		<converters:WidthChangeConverter x:Key="WidthChangeConverter" />
		<converters:ToStringConverter x:Key="ToStringConverter" />
	</pluginUI:CustomWindow.Resources>

	<Grid Name="MainGrid">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="37" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>

		<StackPanel Orientation="Horizontal" ToolTip="The custom type to map to the result set's columns.">
			<TextBlock>Custom type (optional):</TextBlock>
			<pluginUIEditors:TypeReferenceEditor Margin="5 0 0 0" Width="200" IncludeDefault="True" IncludeBuiltInListTypes="False" IncludeBuiltInCompiledTypes="None" IncludeCustomTypes="True" Value="{Binding SelectedCustomType}" />
		</StackPanel>
		
		<Grid x:Name="HeaderGrid" Grid.Row="1" Margin="2" Background="{StaticResource BackgroundBrush}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="20"></ColumnDefinition>
				<ColumnDefinition Width="2*"></ColumnDefinition>
				<ColumnDefinition Width="160"></ColumnDefinition>
				<ColumnDefinition Width="3*"></ColumnDefinition>
			</Grid.ColumnDefinitions>

			<Grid VerticalAlignment="Center" Grid.ColumnSpan="2">
				<TextBlock Name="HeadingName" Foreground="{StaticResource ForegroundDarkBrush}" Text="Original Column Name" HorizontalAlignment="Stretch" TextAlignment="Center"/>
			</Grid>
			<Grid VerticalAlignment="Center" Grid.Column="2">
				<TextBlock Name="HeadingType" Foreground="{StaticResource ForegroundDarkBrush}" Text="Type" Grid.Column="2" HorizontalAlignment="Stretch" TextAlignment="Center"/>
			</Grid>
			<Grid VerticalAlignment="Center" Grid.Column="3">
				<TextBlock Name="HeadingValue" Foreground="{StaticResource ForegroundDarkBrush}" Text="Output Name" Grid.Column="3" HorizontalAlignment="Stretch" TextAlignment="Center"/>
			</Grid>
		</Grid>

		<ListView x:Name="DisplayTree" Grid.Row="2" Foreground="{StaticResource TitlebarActive}" Background="{StaticResource DialogWindowBackgroundBrush}" Width="{Binding ActualWidth, ElementName=HeaderGrid}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
					ItemsSource="{Binding ResultFields}" KeyUp="VariableListKeyPress" Loaded="DisplayTree_Loaded" KeyboardNavigation.TabNavigation="Continue">
			<ListView.Resources>
				<DataTemplate DataType="{x:Type viewModel:ResultFieldModel}">
					<Grid Height="40" Margin="2">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="40"></ColumnDefinition>
							<ColumnDefinition Width="2*"></ColumnDefinition>
							<ColumnDefinition Width="190"></ColumnDefinition>
							<ColumnDefinition Width="3*"></ColumnDefinition>
						</Grid.ColumnDefinitions>
						<Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding IsDragged, Converter={StaticResource IsDraggedToColorConverter}}"
								dd:DragDrop.IsDragSource="True" dd:DragDrop.IsDropTarget="True" dd:DragDrop.DragHandler="{Binding DragDropController}" dd:DragDrop.DropHandler="{Binding DragDropController}">
							<Path Width="16" Height="10" VerticalAlignment="Center" HorizontalAlignment="Center" Data="M0,1 L16,1 M0,5 L16,5 M0,9 L16,9" Stroke="{StaticResource ForegroundLightBrush}" StrokeThickness="2" />
						</Border>
						<Border x:Name="b" Grid.Column="1" Margin="0 0 10 0"/>
						<Border Name="ColumnName" Width="{Binding ActualWidth, ElementName=b}" Grid.Column="1" VerticalAlignment="Stretch" Background="White" BorderThickness="0" Margin="0 0 10 0"  Padding="5 0 0 0"
								dd:DragDrop.IsDropTarget="True" dd:DragDrop.DropHandler="{Binding DragDropController}">
							<TextBox Width="{Binding ActualWidth, ElementName=b}" TextWrapping="NoWrap" BorderThickness="0" VerticalAlignment="Center" 
									 Tag="{Binding ColumnNameIsFocused, Mode=OneWayToSource}" IsKeyboardFocusedChanged="TextBox_IsKeyboardFocusedChanged"
									 Text="{Binding ColumnName, UpdateSourceTrigger=PropertyChanged}">
								<TextBox.Style>
									<Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
																				<EventSetter Event="GotKeyboardFocus" Handler="TextBox_GotKeyboardFocus" ></EventSetter>
																				<Setter Property="Background" Value="Transparent" />
										<Style.Resources>
											<VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
												<VisualBrush.Visual>
													<Label Content="Column Name" Foreground="LightGray" Background="Transparent" Width="10000" />
												</VisualBrush.Visual>
											</VisualBrush>
										</Style.Resources>
										<Style.Triggers>
											<Trigger Property="Text" Value="{x:Static sys:String.Empty}">
												<Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
											</Trigger>
											<Trigger Property="Text" Value="{x:Null}">
												<Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
											</Trigger>
											<Trigger Property="IsKeyboardFocused" Value="True">
												<Setter Property="Background" Value="Transparent" />
											</Trigger>
										</Style.Triggers>
									</Style>
								</TextBox.Style>
							</TextBox>
						</Border>
						<StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Stretch"
									dd:DragDrop.IsDropTarget="True" dd:DragDrop.DropHandler="{Binding DragDropController}">
							<pluginUIEditors:TypeReferenceEditor IncludeDefault="False" IncludeBuiltInListTypes="True" IncludeCustomTypes="False" IncludeBuiltInCompiledTypes="All" Value="{Binding SelectedType}">
								<pluginUIEditors:TypeReferenceEditor.Style>
									<Style TargetType="{x:Type pluginUIEditors:TypeReferenceEditor}">
										<Setter Property="Width" Value="186" />
										<Setter Property="Margin" Value="2 0 2 0" />
										<Style.Triggers>
											<DataTrigger Value="True" Binding="{Binding DisplayElementTypeSelector}">
												<Setter Property="Width" Value="91" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</pluginUIEditors:TypeReferenceEditor.Style>
							</pluginUIEditors:TypeReferenceEditor>
							<pluginUIEditors:TypeReferenceEditor HorizontalAlignment="Stretch" Width="93"
								IncludeDefault="False" IncludeBuiltInListTypes="False" IncludeCustomTypes="False" IncludeBuiltInCompiledTypes="Specified" BuiltInCompiledTypes="Byte" Value="{Binding SelectedElementType}">
								<pluginUIEditors:TypeReferenceEditor.Style>
									<Style TargetType="{x:Type pluginUIEditors:TypeReferenceEditor}">
										<Setter Property="Visibility" Value="Collapsed" />
										<Setter Property="Margin" Value="0 0 2 0" />
										<Style.Triggers>
											<DataTrigger Value="True" Binding="{Binding DisplayElementTypeSelector}">
												<Setter Property="Visibility" Value="Visible" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</pluginUIEditors:TypeReferenceEditor.Style>
							</pluginUIEditors:TypeReferenceEditor>
						</StackPanel>
						<Border x:Name="cb" Grid.Column="3" Margin="10 0 0 0"/>
						<Border Name="NameText" Grid.Column="3" BorderThickness="0" Padding="5 0 0 0" Margin="10 0 0 0" VerticalAlignment="Stretch" Width="{Binding ActualWidth, ElementName=cb}" Background="White"
								Visibility="{Binding DataContext.IsMappingCustomType, Converter={StaticResource InverseBooleanToVisibilityConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ResultTypeEditorWindow}}}"
								dd:DragDrop.IsDropTarget="True" dd:DragDrop.DropHandler="{Binding DragDropController}">
							<TextBox Width="{Binding ActualWidth, ElementName=cb}" TextWrapping="NoWrap" VerticalAlignment="Center" BorderThickness="0"
										Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}">
								<TextBox.Style>
									<Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
																				<EventSetter Event="GotKeyboardFocus" Handler="TextBox_GotKeyboardFocus" ></EventSetter>
																				<Setter Property="Background" Value="Transparent" />
										<Style.Resources>
											<VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
												<VisualBrush.Visual>
													<Label Content="Output Name" Foreground="LightGray" Background="Transparent" Width="10000" />
												</VisualBrush.Visual>
											</VisualBrush>
										</Style.Resources>
										<Style.Triggers>
											<Trigger Property="Text" Value="{x:Static sys:String.Empty}">
												<Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
											</Trigger>
											<Trigger Property="Text" Value="{x:Null}">
												<Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
											</Trigger>
											<Trigger Property="IsKeyboardFocused" Value="True">
												<Setter Property="Background" Value="Transparent" />
											</Trigger>
										</Style.Triggers>
									</Style>
								</TextBox.Style>
							</TextBox>
						</Border>
						<Border Name="NameDropDown" Grid.Column="3" BorderThickness="0" Padding="5 0 0 0" Margin="10 0 0 0" VerticalAlignment="Stretch" Width="{Binding ActualWidth, ElementName=cb}" Background="{Binding IsDragged, Converter={StaticResource IsDraggedToColorConverter}}"
								Visibility="{Binding DataContext.IsMappingCustomType, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ResultTypeEditorWindow}}}"
								dd:DragDrop.IsDropTarget="True" dd:DragDrop.DropHandler="{Binding DragDropController}">
							<ComboBox Margin="2" HorizontalAlignment="Stretch" VerticalContentAlignment="Center" IsEditable="True"
											Text="{Binding Name}" ItemsSource="{Binding DataContext.CustomTypeProperties, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ResultTypeEditorWindow}}, Mode=OneWay}" />
						</Border>
					</Grid>
					<DataTemplate.Triggers>
						<DataTrigger Binding="{Binding Path=DataContext.ColumnNameIsValid, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
							<Setter Property="Background" TargetName="ColumnName" Value="Red" />
						</DataTrigger>
						<DataTrigger Binding="{Binding Path=DataContext.NameIsValid, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
							<Setter Property="Background" TargetName="NameText" Value="Red" />
							<Setter Property="Background" TargetName="NameDropDown" Value="Red" />
						</DataTrigger>
					</DataTemplate.Triggers>
				</DataTemplate>
			</ListView.Resources>
		</ListView>

		<DockPanel Grid.Row="3" Style="{StaticResource DialogWindowButtonDockPanelStyle}" LastChildFill="False">
			<Button IsCancel="True" DockPanel.Dock="Right" TabIndex="3">CANCEL</Button>
			<Button Style="{StaticResource DialogPrimaryButtonStyle}" Command="{Binding Path=Save}" IsDefault="true" DockPanel.Dock="Right" Margin="0 0 10 0" TabIndex="2">SAVE</Button>

			<Button Command="{Binding Path=CreateDataFromSql}" Width="150" Margin="10 0 0 0" TabIndex="1">CREATE FROM SQL</Button>
		</DockPanel>
	</Grid>
</pluginUI:CustomWindow>
