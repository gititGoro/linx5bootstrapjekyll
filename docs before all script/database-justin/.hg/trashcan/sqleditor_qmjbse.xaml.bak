<pluginUI:CustomWindow x:Class="Twenty57.Linx.Components.Database.ExecuteSQL.Editors.SQLEditor.SQLEditor"
											 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
											 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
											 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
											 xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
											 xmlns:mvvmTextEditor="clr-namespace:Twenty57.Linx.Components.Database.UI.Controls"
											 xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
											 xmlns:model="clr-namespace:Twenty57.Linx.Components.Database.ExecuteSQL.Editors.SQLEditor.ViewModel"
											 xmlns:pluginUI="clr-namespace:Twenty57.Linx.Plugin.UI.Windows;assembly=Twenty57.Linx.Plugin.UI"
											 xmlns:pluginUIHelpers="clr-namespace:Twenty57.Linx.Plugin.UI.Helpers;assembly=Twenty57.Linx.Plugin.UI"
											 xmlns:avalonedit="clr-namespace:ICSharpCode.AvalonEdit.Editing;assembly=ICSharpCode.AvalonEdit"
											 xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
											 xmlns:local="clr-namespace:Twenty57.Linx.Components.Database.ExecuteSQL.Editors.SQLEditor.ViewModel"
											 xmlns:uiconverters="clr-namespace:Twenty57.Linx.Components.Database.UI.Converters"
											 xmlns:helpers="clr-namespace:Twenty57.Linx.Components.Database.ExecuteSQL.Editors.SQLEditor.Helpers"
											 xmlns:pluginUIEditors="clr-namespace:Twenty57.Linx.Plugin.UI.Editors.Static;assembly=Twenty57.Linx.Plugin.UI"
											 xmlns:gif="http://wpfanimatedgif.codeplex.com"

											 mc:Ignorable="d" 
											 d:DesignHeight="300" d:DesignWidth="300"
											 ShowInTaskbar="False"
											 Title="SQL"
											 WindowStartupLocation="CenterOwner"
											 Width="800" MinWidth="800"
											 Height="500" MinHeight="450"
											 pluginUIHelpers:DialogCloser.DialogResult="{Binding DialogResult}" 
											 FocusManager.FocusedElement="{Binding ElementName=sqlEditor}"
											 Style="{StaticResource DialogWindowStyle}">

	<pluginUI:CustomWindow.Resources>
		<SolidColorBrush x:Key="TabGreen" Color="#2EB398"/>
		<SolidColorBrush x:Key="BackGreen" Color="#AFDBD2"/>
		<SolidColorBrush x:Key="SoftGrey" Color="#808080"/>

		<Style TargetType="{x:Type TabControl}" x:Key="BaseTabStyle">
			<Setter Property="Background" Value="{StaticResource DialogWindowBackgroundBrush}" />
		</Style>
		<Style TargetType="{x:Type TabControl}" x:Key="EditorTestStyle" BasedOn="{StaticResource BaseTabStyle}">
			<Setter Property="BorderThickness" Value="0,2,0,0" />
			<Setter Property="BorderBrush" Value="{StaticResource TabGreen}" />
		</Style>

		<Style TargetType="{x:Type TabItem}" x:Key="BaseSqlTestStyle">
			<Setter Property="Width" Value="60" />
			<Setter Property="Height" Value="25"/>
		</Style>

		<Style TargetType="{x:Type TabControl}" x:Key="VariablesObjectsStyle" BasedOn="{StaticResource BaseTabStyle}">
			<Setter Property="Margin" Value="5,10,5,0" />
			<Setter Property="BorderThickness" Value="0,2,0,0" />
			<Setter Property="BorderBrush" Value="{StaticResource SoftGrey}" />
		</Style>

		<Style TargetType="TextBlock" x:Key="VariablesObjectHeaderTextBlockStyle">
			<Style.Triggers>
				<DataTrigger Binding="{Binding IsSelected,
                          RelativeSource={RelativeSource AncestorType=TabItem}}"
                         Value="True">
					<Setter Property="FontWeight" Value="Bold"/>
				</DataTrigger>
			</Style.Triggers>
		</Style>

		<Style TargetType="{x:Type TabItem}" x:Key="SQLTestTabItemStyle" BasedOn="{StaticResource BaseSqlTestStyle}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabItem}">
						<Grid>
							<Border Name="Border" Margin="0,0,0,2" Background="Transparent">
								<Border BorderThickness="0,0,0,2" BorderBrush="{StaticResource DialogWindowBackgroundBrush}">
									<ContentPresenter x:Name="ContentSite" VerticalAlignment="Center"
									  HorizontalAlignment="Center"
									  ContentSource="Header" Margin="12,2,12,2"
									  RecognizesAccessKey="True">
									</ContentPresenter>
								</Border>
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource TabGreen}" />
								<Setter TargetName="Border" Property="BorderThickness" Value="2,2,2,0" />
								<Setter TargetName="Border" Property="Margin" Value="-2,0,0,-2" />
							</Trigger>
							<Trigger Property="IsSelected" Value="False">
								<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DialogWindowBackgroundBrush}" />
								<Setter TargetName="Border" Property="BorderThickness" Value="0,0,0,2" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="{x:Type TabItem}" x:Key="BaseVariablesObjectsStyle">
			<Setter Property="Width" Value="95" />
			<Setter Property="Height" Value="25"/>
		</Style>

		<Style TargetType="{x:Type TabItem}" x:Key="VariablesTabItemStyle" BasedOn="{StaticResource BaseVariablesObjectsStyle}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabItem}">
						<Grid>
							<Border Name="Border" Background="Transparent">
								<Border BorderThickness="1,1,0,0" BorderBrush="{StaticResource SoftGrey}">
									<ContentPresenter x:Name="ContentSite" VerticalAlignment="Center"
									  HorizontalAlignment="Center"
									  ContentSource="Header" Margin="12,2,12,2"
									  RecognizesAccessKey="True">
									</ContentPresenter>
								</Border>
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter TargetName="Border" Property="Background" Value="{StaticResource BackGreen}" />
								<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource TabGreen}" />
								<Setter TargetName="Border" Property="BorderThickness" Value="0,0,0,2" />
								<Setter TargetName="Border" Property="Margin" Value="0,0,0,-1.5" />
							</Trigger>
							<Trigger Property="IsSelected" Value="False">
								<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SoftGrey}" />
								<Setter TargetName="Border" Property="BorderThickness" Value="0,0,0,1" />
								<Setter TargetName="Border" Property="Margin" Value="0,0,0,-1.5" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="{x:Type TabItem}" x:Key="ObjectTabItemStyle" BasedOn="{StaticResource BaseVariablesObjectsStyle}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabItem}">
						<Grid>
							<Border Name="Border" Background="Transparent">
								<Border BorderThickness="0,1,1,0" BorderBrush="{StaticResource SoftGrey}">
									<ContentPresenter x:Name="ContentSite" VerticalAlignment="Center"
									  HorizontalAlignment="Center"
									  ContentSource="Header" Margin="12,2,12,2"
									  RecognizesAccessKey="True">
									</ContentPresenter>
								</Border>
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter TargetName="Border" Property="Background" Value="{StaticResource BackGreen}" />
								<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource TabGreen}" />
								<Setter TargetName="Border" Property="BorderThickness" Value="0,0,0,2" />
								<Setter TargetName="Border" Property="Margin" Value="0,0,0,-1.5" />
							</Trigger>
							<Trigger Property="IsSelected" Value="False">
								<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SoftGrey}" />
								<Setter TargetName="Border" Property="BorderThickness" Value="0,0,0,1" />
								<Setter TargetName="Border" Property="Margin" Value="0,0,0,-1.5" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="Button" x:Key="expressionButtonStyle" BasedOn="{StaticResource DialogButtonStyle}">
			<Setter Property="Width" Value="120" />
			<Setter Property="Height" Value="20" />
			<Setter Property="Content" Value="INSERT E_XPRESSION"/>
			<Style.Triggers>
				<DataTrigger Binding="{Binding SQLIndexInExpression}" Value ="True">
					<Setter Property="Content" Value="EDIT E_XPRESSION"></Setter>
				</DataTrigger>
			</Style.Triggers>
		</Style>
		<BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"/>
		<uiconverters:GridLengthConverter x:Key="gridLengthConverter"/>
		<helpers:GridSplitterVisibilityConverter x:Key="gridSplitterVisibilityConverter"/>
		<helpers:TestSqlPaneScrollViewerHeightConverter x:Key="testSqlPaneScrollViewerHeightConverter"/>
		<helpers:MouseWheelBehavior x:Key="ignoreMouseWheelBehavior"/>
	</pluginUI:CustomWindow.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="*"/>
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>
		<Grid Grid.Row="0" Name="mainGrid">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="2*" MinWidth="280"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="5"/>
				<RowDefinition Height="*" MinHeight="80"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>
			<DockPanel Grid.Column="2"
								 Grid.Row="1"
								 LastChildFill="False" VerticalAlignment="Top" Margin="0 0 0 5"
								 Panel.ZIndex="1000">

				<Button DockPanel.Dock="Right" 
								Style="{StaticResource expressionButtonStyle}"
								Command="{Binding ExpressionCommand}"
								Visibility="{Binding SQLTabSelected, Converter={StaticResource VisibilityConverter}}"/>
			</DockPanel>
			<Border BorderThickness="0" 
								BorderBrush="DarkGray"
								Grid.Row="1">
				<TabControl x:Name="editorTestTabControl" 
				SelectedIndex="{Binding EditorTestTabSelectedIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource EditorTestStyle}">
					<TabItem Header="SQL" Style="{StaticResource SQLTestTabItemStyle}">
						<Grid x:Name="sqlGrid">
							<Grid.ColumnDefinitions>
								<ColumnDefinition MinWidth="100" Width="300*" />
								<ColumnDefinition Width="3*"/>
								<ColumnDefinition MinWidth="204"  Width="100*"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="*"/>
							</Grid.RowDefinitions>
							<mvvmTextEditor:MvvmTextEditor x:Name="sqlEditor" Grid.Column="0" Foreground="{StaticResource TitlebarActive}" VerticalAlignment="Stretch"
									FontFamily="Consolas"
									ScrollViewer.HorizontalScrollBarVisibility="Auto"
									ScrollViewer.VerticalScrollBarVisibility="Auto"
									BoundCaretOffset="{Binding SQLIndex, Mode=TwoWay}"
									BoundText="{Binding SQL, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
									dd:DragDrop.IsDropTarget="True" dd:DragDrop.DropHandler="{Binding}" >
								<mvvmTextEditor:MvvmTextEditor.Resources>
									<Style TargetType="avalonedit:TextArea">
										<Setter Property="Foreground" Value="Black" />
									</Style>
								</mvvmTextEditor:MvvmTextEditor.Resources>
							</mvvmTextEditor:MvvmTextEditor>
							<GridSplitter Grid.Column="1"
										HorizontalAlignment="Center"
										VerticalAlignment="Stretch"
										ShowsPreview="True"
										Background="White"
										BorderBrush="{StaticResource SoftGrey}"
										Width="2" />
							<Border BorderThickness="1" Margin="0,-2,-2,0" Grid.Column="3" Background="{StaticResource DialogWindowBackgroundBrush}" BorderBrush="#BBBBBB" Grid.ColumnSpan="2">
								<TabControl TabStripPlacement ="Top"   Style="{StaticResource VariablesObjectsStyle}"
								SelectedIndex="{Binding SQLSelectedTabIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
									<TabItem Style="{StaticResource VariablesTabItemStyle}">
										<TabItem.Header>
											<TextBlock Text="Variables" Style="{StaticResource VariablesObjectHeaderTextBlockStyle}" />
										</TabItem.Header>
										<Border BorderBrush="{StaticResource DialogWindowBackgroundBrush}" BorderThickness="3" Margin="-3">
											<pluginUIEditors:VariablesEditor Designer="{Binding Designer, Mode=OneWay}" DataContext="{Binding}" BorderThickness="0"/>
										</Border>
									</TabItem>
									<TabItem Style="{StaticResource ObjectTabItemStyle}" BorderThickness="0">
										<TabItem.Header>
											<TextBlock Text="Objects" Style="{StaticResource VariablesObjectHeaderTextBlockStyle}" />
										</TabItem.Header>
										<Border BorderBrush="{StaticResource DialogWindowBackgroundBrush}" BorderThickness="3" Margin="-3">
											<Grid>
												<Grid.RowDefinitions>
													<RowDefinition Height="85*"/>
													<RowDefinition Height="23*"/>
													<RowDefinition Height="230*"/>
												</Grid.RowDefinitions>
												<StackPanel Background="{StaticResource DialogWindowBackgroundBrush}" Grid.RowSpan="3">
													<Image gif:ImageBehavior.AnimatedSource="{StaticResource AppIcon_Loading}" Height="20" Width="20" Visibility="{Binding LoadingDatabaseObjects, Converter={StaticResource VisibilityConverter}}" Margin="5" Grid.Column="0"/>
												</StackPanel>
												<TreeView Margin="0,0,0,0" Background="{StaticResource DialogWindowBackgroundBrush}"  ItemsSource="{Binding DatabaseObjects}" Visibility="{Binding DatabaseObjectsLoaded, Converter={StaticResource VisibilityConverter}}" dd:DragDrop.IsDragSource="True" dd:DragDrop.DragHandler="{Binding}" Grid.RowSpan="3">
													<TreeView.Resources>
														<HierarchicalDataTemplate DataType="{x:Type model:ComplexNodeViewModel}" ItemsSource="{Binding Children}">
															<StackPanel  Background="{StaticResource DialogWindowBackgroundBrush}" Orientation="Horizontal" >
																<TextBlock  Background="{StaticResource DialogWindowBackgroundBrush}"  Text="{Binding Text}">
																	<TextBlock.ContextMenu >
																		<ContextMenu Visibility="{Binding ContextMenuVisible, Mode=OneWay, Converter={StaticResource VisibilityConverter}}" >
																			<MenuItem Header="Generate Select" Command="{Binding GenerateSelectCommand, Mode=OneWay}" />
																			<MenuItem Header="Generate Insert" Command="{Binding GenerateInsertCommand, Mode=OneWay}" />
																			<MenuItem Header="Generate Update" Command="{Binding GenerateUpdateCommand, Mode=OneWay}" />
																		</ContextMenu>
																	</TextBlock.ContextMenu>
																</TextBlock>
															</StackPanel>
														</HierarchicalDataTemplate>
														<DataTemplate DataType="{x:Type model:SimpleNodeViewModel}">
															<StackPanel Background="{StaticResource DialogWindowBackgroundBrush}" Orientation="Horizontal" Margin="0,1,2,1">
																<TextBlock Text="{Binding Text}" />
															</StackPanel>
														</DataTemplate>
													</TreeView.Resources>
													<TreeView.ItemContainerStyle>
														<Style TargetType="{x:Type TreeViewItem}">
															<Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
															<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
														</Style>
													</TreeView.ItemContainerStyle>
												</TreeView>
											</Grid>
										</Border>
									</TabItem>
								</TabControl>
							</Border>
						</Grid>
					</TabItem>
					<TabItem Header="Test" Style="{StaticResource SQLTestTabItemStyle}">
						<helpers:TestSqlPaneScrollViewer x:Name="testSqlPane" Grid.Column="4" Foreground="{StaticResource TitlebarActive}" VerticalScrollBarVisibility="Auto" >
							<Grid x:Name="testGrid" >
								<Grid.RowDefinitions>
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="20*" MinWidth="100" />
									<ColumnDefinition Width="137*"/>
									<ColumnDefinition Width="3" />
									<ColumnDefinition Width="626*" MinWidth="100" />
								</Grid.ColumnDefinitions>

								<Border Grid.Column="0" BorderThickness="1" 
									BorderBrush="{StaticResource TitlebarActive}" 
									IsEnabled="{Binding CanExecuteSQL, Mode=OneWay}"
									Background="{StaticResource ForegroundLightBrush}" Grid.ColumnSpan="2">
									<ScrollViewer x:Name="parameterScrollViewer" VerticalScrollBarVisibility="Auto" MaxHeight="{Binding ElementName=testSqlPane, Path=ActualHeight, Converter={StaticResource testSqlPaneScrollViewerHeightConverter}}" >
										<StackPanel Orientation="Vertical" CanVerticallyScroll="False">
											<TextBlock Margin="5" Foreground="{StaticResource ForegroundDarkBrush}">Test SQL</TextBlock>
											<ListView x:Name="SQLParametersList" Margin="5" ItemsSource="{Binding SQLParameters}">
												<i:Interaction.Behaviors>
													<helpers:MouseWheelBehavior />
												</i:Interaction.Behaviors>
												<ListView.Resources>
													<DataTemplate DataType="{x:Type local:SQLParameterModel}">
														<Grid>
															<Grid.ColumnDefinitions>
																<ColumnDefinition MinWidth="100" Width="*" />
															</Grid.ColumnDefinitions>
															<Grid.RowDefinitions>
																<RowDefinition Height="*" />
																<RowDefinition Height="*" />
															</Grid.RowDefinitions>
															<TextBlock Grid.Row="0" 
															Loaded="SQLParameterNameLabel_Loaded" 
															 HorizontalAlignment="Left" 
															 TextTrimming="CharacterEllipsis" Text="{Binding Name, Mode=OneTime}" 
															 ToolTip="{Binding Name, Mode=OneTime}" 
															 MaxWidth="{Binding ElementName=parameterScrollViewer, Path=ActualWidth, Converter={StaticResource testSqlPaneScrollViewerHeightConverter}}"/>
															<TextBox Grid.Row="1" Text="{Binding Value}" />
														</Grid>
													</DataTemplate>
												</ListView.Resources>
											</ListView>
											<DockPanel Grid.Column="0" LastChildFill="False" Background="{StaticResource ForegroundLightBrush}">
												<Button DockPanel.Dock="Left" Margin="5" Content="_EXECUTE SQL" Width="102" Height="20" Command="{Binding ExecuteSQLCommand, Mode=OneWay}" />
											</DockPanel>
										</StackPanel>
									</ScrollViewer>
								</Border>
								<GridSplitter Grid.Column="2"
										Grid.Row="0"
										HorizontalAlignment="Center"
										VerticalAlignment="Stretch"
										ShowsPreview="True"
										Width="3" />
								<StackPanel x:Name="resultsStackPanel" Grid.Column="3"
								Visibility="{Binding HasQueryResults, Converter={StaticResource booleanToVisibilityConverter}, Mode=OneWay}">
									<StackPanel Margin="5" Orientation="Horizontal">
										<TextBlock FontWeight="Bold" FontSize="12">Results</TextBlock>
										<TextBlock Margin="5 0 0 0" VerticalAlignment="Bottom" 
									   Visibility="{Binding MoreResults, Converter={StaticResource booleanToVisibilityConverter}, Mode=OneWay}" 
									   Text="{Binding ResultsCount, StringFormat='(first {0})'}"/>
									</StackPanel>
									<DataGrid MaxHeight="{Binding ElementName=testSqlPane, Path=ActualHeight, Converter={StaticResource testSqlPaneScrollViewerHeightConverter}}"
											AutoGenerateColumns="True"
											AutoGeneratingColumn="resultsDataGrid_AutoGeneratingColumn"
											IsReadOnly="True"
											ItemsSource="{Binding QueryResults, Mode=OneWay}" 
											CanUserSortColumns="False">
										<i:Interaction.Behaviors>
											<helpers:MouseWheelBehavior />
										</i:Interaction.Behaviors>
									</DataGrid>
								</StackPanel>
								<TextBox Grid.Column="3" 
									 TextWrapping="Wrap"
									 IsReadOnly="True"
									 ScrollViewer.VerticalScrollBarVisibility="Auto"
									 Text="{Binding QueryError, Mode=OneWay}"
									 Visibility="{Binding HasQueryError, Converter={StaticResource booleanToVisibilityConverter}, Mode=OneWay}"/>
							</Grid>
						</helpers:TestSqlPaneScrollViewer>
					</TabItem>
				</TabControl>
			</Border>
		</Grid>
		<DockPanel Grid.Row="1" HorizontalAlignment="Stretch" LastChildFill="False" Style="{StaticResource DialogWindowButtonDockPanelStyle}">
			<Button Content="_CANCEL" IsCancel="True" DockPanel.Dock="Right" TabIndex="2"/>
			<Button Style="{StaticResource DialogPrimaryButtonStyle}" Content="_OK" Command="{Binding OKCommand, Mode=OneWay}" Margin="0 0 10 0" DockPanel.Dock="Right" TabIndex="1"/>
		</DockPanel>
	</Grid>
</pluginUI:CustomWindow>
