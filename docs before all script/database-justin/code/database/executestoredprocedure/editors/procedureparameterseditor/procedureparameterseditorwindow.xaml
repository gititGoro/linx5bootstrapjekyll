<pluginUI:CustomWindow x:Class="Twenty57.Linx.Components.Database.ExecuteStoredProcedure.Editors.ProcedureParametersEditor.ProcedureParametersEditorWindow"
											 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
											 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
											 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
											 xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
											 xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
											 xmlns:pluginUI="clr-namespace:Twenty57.Linx.Plugin.UI.Windows;assembly=Twenty57.Linx.Plugin.UI"
											 xmlns:pluginUIHelpers="clr-namespace:Twenty57.Linx.Plugin.UI.Helpers;assembly=Twenty57.Linx.Plugin.UI"
											 xmlns:local="clr-namespace:Twenty57.Linx.Components.Database.ExecuteStoredProcedure.Editors.ProcedureParametersEditor.ViewModel"
											 xmlns:converters="clr-namespace:Twenty57.Linx.Components.Database.UI.Converters"
											 xmlns:validators="clr-namespace:Twenty57.Linx.Components.Database.ExecuteStoredProcedure.Editors.ProcedureParametersEditor.Validators"
											 mc:Ignorable="d" 
											 Style="{StaticResource DialogWindowStyle}"
											 d:DesignHeight="300" d:DesignWidth="420"
											 Height="480" Width="650"
											 MinHeight="300" MinWidth="420"
											 Title="Parameters Editor"
											 ShowInTaskbar="False"
											 WindowStartupLocation="CenterOwner"
											 pluginUIHelpers:DialogCloser.DialogResult="{Binding DialogResult}">
	<pluginUI:CustomWindow.Resources>
		<converters:BoolToValueConverter x:Key="SizeRequiredToColumnSpanConverter" FalseValue="2" TrueValue="1" />
		<converters:BoolToValueConverter x:Key="IsDraggedToColorConverter" FalseValue="{StaticResource TitlebarInactive}" TrueValue="{StaticResource TitlebarActive}" />
		<BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
	</pluginUI:CustomWindow.Resources>
		<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="37" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>

		<Grid Grid.Row="0">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="40" />
				<ColumnDefinition Width="5*" />
				<ColumnDefinition Width="3*" />
				<ColumnDefinition Width="3*" />
			</Grid.ColumnDefinitions>

			<TextBlock x:Name="NameHeader" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Stretch" TextAlignment="Center" Foreground="{StaticResource ForegroundDarkBrush}" Margin="0 0 10 0">Name</TextBlock>
			<TextBlock x:Name="DirectionHeader" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" TextAlignment="Center" Foreground="{StaticResource ForegroundDarkBrush}" Margin="0 0 10 0">Direction</TextBlock>
			<TextBlock x:Name="TypeHeader" Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Stretch" TextAlignment="Center" Foreground="{StaticResource ForegroundDarkBrush}">Type</TextBlock>
		</Grid>

		<ListView Grid.Row="1" ItemsSource="{Binding Parameters}" KeyUp="ListView_KeyUp" Loaded="ListView_Loaded" KeyboardNavigation.TabNavigation="Continue">
			<ListView.Resources>
				<DataTemplate DataType="{x:Type local:ProcedureParameterModel}">
					<Grid Height="40">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="40" />
							<ColumnDefinition Width="5*" />
							<ColumnDefinition Width="3*" />
							<ColumnDefinition Width="2*"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>

						<Border Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding IsDragged, Converter={StaticResource IsDraggedToColorConverter}}" 
								dd:DragDrop.IsDragSource="True" dd:DragDrop.IsDropTarget="True" dd:DragDrop.DragHandler="{Binding DragDropController}" dd:DragDrop.DropHandler="{Binding DragDropController}">
							<Path Width="16" Height="10" VerticalAlignment="Center" HorizontalAlignment="Center" Data="M0,1 L16,1 M0,5 L16,5 M0,9 L16,9" Stroke="{StaticResource ForegroundLightBrush}" StrokeThickness="2" />
						</Border>
						<Border Grid.Column="1" MaxWidth="{Binding ActualWidth, ElementName=NameHeader}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="White" BorderThickness="0" 
										Padding="5 0 0 0" Margin="0 0 10 0"
										dd:DragDrop.IsDropTarget="True" dd:DragDrop.DropHandler="{Binding DragDropController}">
							<TextBox VerticalAlignment="Center" HorizontalAlignment="Stretch" BorderThickness="0" TextWrapping="NoWrap" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}">
								<TextBox.Style>
									<Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
																				<EventSetter Event="GotKeyboardFocus" Handler="TextBox_GotKeyboardFocus" ></EventSetter>
																				<Setter Property="Background" Value="Transparent" />
										<Style.Resources>
											<VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
												<VisualBrush.Visual>
													<Label Content="Parameter Name" Foreground="LightGray" Background="Transparent" Width="10000" />
												</VisualBrush.Visual>
											</VisualBrush>
										</Style.Resources>
										<Style.Triggers>
											<Trigger Property="Text" Value="{x:Static sys:String.Empty}">
												<Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
											</Trigger>
											<Trigger Property="Text" Value="{x:Null}">
												<Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
											</Trigger>
											<Trigger Property="IsKeyboardFocused" Value="True">
												<Setter Property="Background" Value="Transparent" />
											</Trigger>
										</Style.Triggers>
									</Style>
								</TextBox.Style>
							</TextBox>
						</Border>
						<Border Grid.Column="2" MaxWidth="{Binding ActualWidth, ElementName=DirectionHeader}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding IsDragged, Converter={StaticResource IsDraggedToColorConverter}}"
								dd:DragDrop.IsDropTarget="True" dd:DragDrop.DropHandler="{Binding DragDropController}" Margin="0 0 10 0">
							<ComboBox HorizontalAlignment="Stretch" VerticalContentAlignment="Center" Foreground="{StaticResource ForegroundDarkBrush}" 
												ItemsSource="{Binding Directions}" SelectedItem="{Binding Direction}" />
						</Border>
						<Border Grid.Column="3" Grid.ColumnSpan="{Binding RequiresSize, Converter={StaticResource SizeRequiredToColumnSpanConverter}}" MaxWidth="{Binding ActualWidth, ElementName=TypeHeader}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding IsDragged, Converter={StaticResource IsDraggedToColorConverter}}"
								dd:DragDrop.IsDropTarget="True" dd:DragDrop.DropHandler="{Binding DragDropController}">
							<ComboBox HorizontalAlignment="Stretch" VerticalContentAlignment="Center" Foreground="{StaticResource ForegroundDarkBrush}" FontFamily="Courier New"
										ItemsSource="{Binding DataTypes}" SelectedItem="{Binding DataType}" />
						</Border>
						<Border Grid.Column="4" Visibility="{Binding RequiresSize, Converter={StaticResource BoolToVisibilityConverter}}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="White" BorderThickness="0" 
										Padding="5 0 0 0" Margin="0 0 10 0"
										dd:DragDrop.IsDropTarget="True" dd:DragDrop.DropHandler="{Binding DragDropController}">
							<TextBox VerticalAlignment="Center" HorizontalAlignment="Stretch" BorderThickness="0" TextWrapping="NoWrap">
								<Binding Path="Size" UpdateSourceTrigger="PropertyChanged">
									<Binding.ValidationRules>
										<validators:ParameterSizeValidator />
									</Binding.ValidationRules>
								</Binding>
								<TextBox.Style>
									<Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
																				<EventSetter Event="GotKeyboardFocus" Handler="TextBox_GotKeyboardFocus" ></EventSetter>
																				<Setter Property="Background" Value="Transparent" />
										<Style.Resources>
											<VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
												<VisualBrush.Visual>
													<Label Content="Size" Foreground="LightGray" Background="Transparent" Width="10000" />
												</VisualBrush.Visual>
											</VisualBrush>
										</Style.Resources>
										<Style.Triggers>
											<Trigger Property="Text" Value="{x:Static sys:String.Empty}">
												<Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
											</Trigger>
											<Trigger Property="Text" Value="{x:Null}">
												<Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
											</Trigger>
											<Trigger Property="IsKeyboardFocused" Value="True">
												<Setter Property="Background" Value="Transparent" />
											</Trigger>
											<Trigger Property="Validation.HasError" Value="true">
												<Setter Property="Background" Value="MistyRose" />
												<Setter Property="BorderBrush" Value="Red" />
												<Setter Property="BorderThickness" Value="0.5" />
												<Setter Property="VerticalContentAlignment" Value="Center" />
												<Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
											</Trigger>
										</Style.Triggers>
									</Style>
								</TextBox.Style>
							</TextBox>
						</Border>
					</Grid>
				</DataTemplate>
			</ListView.Resources>
		</ListView>

		<DockPanel Grid.Row="2" Style="{StaticResource DialogWindowButtonDockPanelStyle}">
			<Button DockPanel.Dock="Left" Margin="10 0 0 0" Width="160" Command="{Binding GetParametersCommand}">REFRESH FROM DATABASE</Button>
			<Button Content="_CANCEL" IsCancel="True" DockPanel.Dock="Right" TabIndex="2" />
			<Button Style="{StaticResource DialogPrimaryButtonStyle}" Content="_SAVE" DockPanel.Dock="Right" Margin="0 0 10 0" Command="{Binding SaveCommand, Mode=OneTime}" TabIndex="1" />
		</DockPanel>
	</Grid>
</pluginUI:CustomWindow>
